// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedMist.Database;

#nullable disable

namespace RedMist.Migrations
{
    [DbContext(typeof(TsContext))]
    partial class TsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RedMist.Database.Models.CarLapLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CarNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("LapData")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LapNumber")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CarLapLogs");
                });

            modelBuilder.Entity("RedMist.Database.Models.CarLastLap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("LastLapNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastLapTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CarLastLaps");
                });

            modelBuilder.Entity("RedMist.Database.Models.DefaultOrgImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("DefaultOrgImages");
                });

            modelBuilder.Entity("RedMist.Database.Models.EventStatusLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("EventStatusLogs");
                });

            modelBuilder.Entity("RedMist.Database.Models.FlagLog", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.HasKey("EventId", "SessionId", "Flag", "StartTime");

                    b.ToTable("FlagLog");
                });

            modelBuilder.Entity("RedMist.Database.Models.GoogleSheetsConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Json")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("GoogleSheetsConfigs");
                });

            modelBuilder.Entity("RedMist.Database.Models.RelayLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RelayLogs");
                });

            modelBuilder.Entity("RedMist.Database.Models.SessionResult", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("EventId", "SessionId");

                    b.ToTable("SessionResults");
                });

            modelBuilder.Entity("RedMist.Database.Models.UserOrganizationMapping", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Username", "OrganizationId");

                    b.ToTable("UserOrganizationMappings");
                });

            modelBuilder.Entity("RedMist.TimingCommon.Models.CompetitorMetadata", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "e");

                    b.Property<string>("CarNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasAnnotation("Relational:JsonPropertyName", "n");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasAnnotation("Relational:JsonPropertyName", "cl");

                    b.Property<string>("Club")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Hometown")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "lu");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("ModelEngine")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("NationState")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Sponsor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Tires")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<long>("Transponder")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "t");

                    b.Property<long>("Transponder2")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "t2");

                    b.HasKey("EventId", "CarNumber");

                    b.ToTable("CompetitorMetadata");
                });

            modelBuilder.Entity("RedMist.TimingCommon.Models.Configuration.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Broadcast")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseConfiguration")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Distance")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("EnableSourceDataLogging")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLive")
                        .HasColumnType("bit");

                    b.Property<string>("LoopsMetadata")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("RedMist.TimingCommon.Models.Configuration.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ControlLogParams")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ControlLogType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MultiloopIp")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("MultiloopPort")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Orbits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrbitsLogsPath")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("RMonitorIp")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("RMonitorPort")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Website")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("X2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Organizations", (string)null);

                    b.ToView("OrganizationExtView", "dbo");
                });

            modelBuilder.Entity("RedMist.TimingCommon.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "sid");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "eid");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "et");

                    b.Property<bool>("IsLive")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "il");

                    b.Property<bool>("IsPracticeQualifying")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "pq");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "lu");

                    b.Property<double>("LocalTimeZoneOffset")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "tz");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasAnnotation("Relational:JsonPropertyName", "n");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "st");

                    b.HasKey("Id", "EventId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("RedMist.TimingCommon.Models.X2.Loop", b =>
                {
                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("HasActivity")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDeviceErrors")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDeviceWarnings")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInPit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSyncOk")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude0")
                        .HasColumnType("float");

                    b.Property<double>("Latitude1")
                        .HasColumnType("float");

                    b.Property<double>("Longitude0")
                        .HasColumnType("float");

                    b.Property<double>("Longitude1")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.HasKey("OrganizationId", "EventId", "Id");

                    b.ToTable("X2Loops");
                });

            modelBuilder.Entity("RedMist.TimingCommon.Models.X2.Passing", b =>
                {
                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "o");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "e");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "i");

                    b.Property<int>("Hits")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "h");

                    b.Property<bool>("IsInPit")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "p");

                    b.Property<bool>("IsResend")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "r");

                    b.Property<long>("LoopId")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "l");

                    b.Property<DateTime>("TimestampLocal")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "tl");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "tu");

                    b.Property<long>("TransponderId")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "t");

                    b.Property<long>("TransponderShortId")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "ts");

                    b.HasKey("OrganizationId", "EventId", "Id");

                    b.ToTable("X2Passings");
                });
#pragma warning restore 612, 618
        }
    }
}
