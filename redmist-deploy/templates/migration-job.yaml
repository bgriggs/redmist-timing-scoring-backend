apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "redmist-deploy.fullname" . }}-migration
  labels:
    {{- include "redmist-deploy.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-failure-policy": fail
spec:
  template:
    metadata:
      labels:
        {{- include "redmist-deploy.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migration
    spec:
      restartPolicy: Never
      containers:
        - name: migration
          image: "{{ .Values.migration.image.repository }}:{{ .Values.global.containerVersion | default .Values.migration.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.migration.image.pullPolicy | default "Always" }}
          command: ["/bin/sh", "-c"]
          args:
          - |
            set -e
            echo "Starting database migration..."
            /usr/bin/dotnet RedMist.DatabaseMigrationRunner.dll
            if [ $? -ne 0 ]; then
              echo "MIGRATION FAILED - STOPPING DEPLOYMENT"
              exit 1
            fi
            echo "Migration completed successfully"
          env:
          {{- $env := merge (.Values.migration.env | default dict) (.Values.global.env | default dict) -}}
          {{ range $k, $v := $env }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
          {{- end }}
          {{ range .Values.global.secrets }}
            - name: {{ .env | quote }}
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}
                  key: {{ .key }}
          {{- end }}
          {{- with .Values.migration.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
  backoffLimit: 0
  activeDeadlineSeconds: {{ .Values.migration.activeDeadlineSeconds | default 600 }}
  ttlSecondsAfterFinished: {{ .Values.migration.ttlSecondsAfterFinished | default 300 }}
